- name: Get info about the VM to be updated
  ansible.builtin.include_tasks:
    file: get_vm_info.yml
  vars:
    vm_name: "{{ vm_update_name }}"

- name: Set vm_uuid variable
  ansible.builtin.set_fact:
    vm_uuid: "{{ vm_info.virtual_machines[0].uuid }}"

- name: Set vm_moid variable
  ansible.builtin.set_fact:
    vm_moid: "{{ vm_info.virtual_machines[0].moid }}"

- name: Update existing VM's name and verify the name updated correctly
  loop: "{{ vm_names_to_update }}"
  ansible.builtin.include_tasks:
    file: update_name_with_validation.yml
  vars:
    vm_name: "{{ item }}"

- name: Update and verify the state of an existing VM
  loop: "{{ vm_states }}"
  ansible.builtin.include_tasks:
    file: update_state_with_validation.yml
  vars:
    vm_state: "{{ item }}"

- name: Add port group with network label {{ portgroup_name }}
  community.vmware.vmware_portgroup:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ provision_vm_validate_certs }}"
    cluster_name: "{{ provision_vm_cluster }}"
    switch: "{{ vswitch_name }}"
    portgroup: "{{ portgroup_name }}"

- name: Update networks of existing VM {{ vm_update_name }}
  ansible.builtin.import_role:
    name: cloud.vmware_ops.provision_vm
  vars:
    provision_vm_name: "{{ vm_update_name }}"
    provision_vm_networks: "{{ vm_updated_networks }}"

- name: Update VM hardware properties
  ansible.builtin.import_role:
    name: cloud.vmware_ops.provision_vm
  vars:
    provision_vm_name: "{{ vm_update_name }}"
    provision_vm_hardware: "{{ vm_updated_hardware }}"

- name: Enlarge existing disk of existing VM {{ vm_update_name }}
  ansible.builtin.import_role:
    name: cloud.vmware_ops.provision_vm
  vars:
    provision_vm_name: "{{ vm_update_name }}"
    provision_vm_disk: "{{ vm_enlarge_disk }}"

- name: Update guest_id of existing VM {{ vm_update_name }}
  ansible.builtin.import_role:
    name: cloud.vmware_ops.provision_vm
  vars:
    provision_vm_name: "{{ vm_update_name }}"
    provision_vm_guest_id: "{{ vm_updated_guest_id }}"
    provision_vm_cdrom: "{{ vm_updated_cdrom }}"

- name: Power on the updated VM {{ vm_update_name }}
  loop:
    - "poweredon"
  ansible.builtin.include_role:
    name: cloud.vmware_ops.provision_vm
  vars:
    provision_vm_name: "{{ vm_update_name }}"
    provision_vm_state: "{{ item }}"
    provision_vm_force: true

- name: Verify updated VM settings
  ansible.builtin.include_tasks:
    file: post_update_settings_validation.yml