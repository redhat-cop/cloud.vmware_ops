---
- name: Run Provision VM Role
  ansible.builtin.include_role:
    name: cloud.vmware_ops.provision_vm
  vars:
    provision_vm_name: "{{ item.provision_vm_name }}"
    provision_vm_state: "{{ item.provision_vm_state | default(omit) }}"
    provision_vm_cdrom: "{{ item.provision_vm_cdrom | default(omit) }}"
    provision_vm_networks: "{{ item.provision_vm_networks | default(omit) }}"
    provision_vm_esxi_hostname: "{{ item.provision_vm_esxi_hostname | default(omit) }}"
    provision_vm_resource_pool: "{{ item.provision_vm_resource_pool | default(omit) }}"
    provision_vm_port: "{{ item.provision_vm_port | default(omit) }}"
    provision_vm_disk: "{{ item.provision_vm_disk | default(omit) }}"
    provision_vm_hardware: "{{ item.provision_vm_hardware | default(omit) }}"
    provision_vm_guest_id: "{{ item.provision_vm_guest_id | default(omit) }}"
    provision_vm_datastore: "{{ item.provision_vm_datastore | default(omit) }}"
    provision_vm_template: "{{ item.provision_vm_template | default(omit) }}"
    provision_vm_is_template: "{{ item.provision_vm_is_template | default(omit) }}"

- name: Run post validations for VMs creation
  block:
  - name: Get info about the VM
    ansible.builtin.include_tasks:
      file: get_vm_info.yml
    vars:
      vm_name: "{{ item.provision_vm_name }}"

  - name: "Validate the properties of the following VM: {{ item.provision_vm_name }}"
    ansible.builtin.assert:
      that:
        - vm_info.virtual_machines[0].guest_name == item.provision_vm_name
        - vm_info.virtual_machines[0].cluster == provision_vm_cluster
        - vm_info.virtual_machines[0].datacenter == provision_vm_datacenter
        - vm_info.virtual_machines[0].folder == provision_vm_folder
        - vm_info.virtual_machines[0].power_state | lower == item.provision_vm_state

  - name: "Validate the following VM datastore when datastore was defined in provision_vm_datastore: {{ item.provision_vm_name }}"
    ansible.builtin.assert:
      that:
        - vm_info.virtual_machines[0].datastore_url[0].name == item.provision_vm_datastore
    when: "'provision_vm_datastore' in item"

  - name: "Validate the following VM datastore when datastore was defined in provision_vm_disk: {{ item.provision_vm_name }}"
    ansible.builtin.assert:
      that:
        - vm_info.virtual_machines[0].datastore_url[0].name == item.provision_vm_disk[0].datastore
    when: "'provision_vm_datastore' not in item"

- name: Run additional post validation for VM template
  block:
  - name: Get info on VM template
    community.vmware.vmware_guest_info:
      validate_certs: false
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      datacenter: "{{ provision_vm_datacenter }}"
      folder: "{{ provision_vm_folder }}"
      name: "{{ item.provision_vm_name }}"
    register: template_info

  - name: Debug template_info
    ansible.builtin.debug:
      var: template_info

  - name: Debug item.provision_vm_is_template
    ansible.builtin.debug:
      var: item.provision_vm_is_template

  - name: Check template
    ansible.builtin.assert:
      that:
        - template_info.instance.hw_is_template == item.provision_vm_is_template
  when:
    - item.provision_vm_is_template is defined
    - item.provision_vm_is_template
