---
- name: Setup
  when: not run_on_simulator
  block:
    - name: Import common vars
      ansible.builtin.include_vars:
        file: ../group_vars.yml

    - name: Create Test VM
      community.vmware.vmware_guest:
        hostname: "{{ vmware_ops_hostname }}"
        username: "{{ vmware_ops_username }}"
        password: "{{ vmware_ops_password }}"
        validate_certs: "{{ vmware_ops_validate_certs }}"
        name: "{{ test_vm_name }}"
        state: poweredoff
        folder: "{{ deploy_ovf_folder }}"
        datacenter: "{{ deploy_ovf_datacenter_name }}"
        cluster: "{{ vcenter_cluster_name }}"
        disk:
          - size_gb: 5
            type: thick
            autoselect_datastore: True
        hardware: "{{ test_vm_hardware }}"
        guest_id: rhel9_64Guest

    - name: Export VM As OVF To Local Directory
      community.vmware.vmware_export_ovf:
        hostname: "{{ vmware_ops_hostname }}"
        username: "{{ vmware_ops_username }}"
        password: "{{ vmware_ops_password }}"
        validate_certs: "{{ vmware_ops_validate_certs }}"
        name: "{{ test_vm_name }}"
        export_dir: "{{ vmware_deploy_ovf_test_export_dir }}"

    - name: Export VM As OVF To Content Library
      ansible.builtin.import_tasks: export_vm_as_ovf_content_library.yml

  always:
    - name: Destroy Test VM
      community.vmware.vmware_guest:
        hostname: "{{ vmware_ops_hostname }}"
        username: "{{ vmware_ops_username }}"
        password: "{{ vmware_ops_password }}"
        validate_certs: "{{ vmware_ops_validate_certs }}"
        name: "{{ test_vm_name }}"
        state: absent

- name: Test
  when: not run_on_simulator
  block:
    - name: Test Deploy OVF From Local Filesystem
      ansible.builtin.import_role:
        name: cloud.vmware_ops.deploy_ovf
      vars:
        deploy_ovf_vm_name: "{{ vm_name_local_ovf }}"
        deploy_ovf_template: "{{ ovf_template_local }}"

    - name: Test Deploy OVF From Content Library
      ansible.builtin.import_role:
        name: cloud.vmware_ops.deploy_ovf
      vars:
        deploy_ovf_vm_name: "{{ vm_name_content_library }}"
        deploy_ovf_template: "{{ ovf_template_content_library }}"
        deploy_ovf_library: "{{ ovf_library }}"

    - name: Check VMs Properties
      ansible.builtin.include_tasks: test_deploy_ovf.yml
      loop:
        - "{{ vm_name_local_ovf }}"
        - "{{ vm_name_content_library }}"

  always:
    - name: Destroy Test VMs
      community.vmware.vmware_guest:
        hostname: "{{ vmware_ops_hostname }}"
        username: "{{ vmware_ops_username }}"
        password: "{{ vmware_ops_password }}"
        validate_certs: "{{ vmware_ops_validate_certs }}"
        name: "{{ item }}"
        state: absent
        force: true
      loop:
        - "{{ vm_name_local_ovf }}"
        - "{{ vm_name_content_library }}"
      retries: 5
      delay: 5
      register: result
      until: result.failed == false

    - name: Delete OVF On Local Filesystem
      ansible.builtin.file:
        state: absent
        path: "{{ ovf_template_local | dirname }}"

    - name: Remove Content Library
      vmware.vmware.local_content_library:
        hostname: "{{ vmware_ops_hostname }}"
        username: "{{ vmware_ops_username }}"
        password: "{{ vmware_ops_password }}"
        validate_certs: "{{ vmware_ops_validate_certs }}"
        library_name: "{{ ovf_library }}"
        state: absent
      retries: 5
      delay: 5
      register: result
      until: result.failed == false
