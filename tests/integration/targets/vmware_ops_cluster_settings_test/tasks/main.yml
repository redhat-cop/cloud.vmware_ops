---
- name: Run cluster settings role on the vCenter Env
  when: not run_on_simulator
  block:
    - name: Import common vars
      ansible.builtin.include_vars:
        file: ../group_vars.yml

    - name: "Create New Cluster: {{ cluster_settings_cluster_name }}"
      vmware.vmware.cluster:
        hostname: "{{ vmware_ops_hostname }}"
        username: "{{ vmware_ops_username }}"
        password: "{{ vmware_ops_password }}"
        validate_certs: "{{ vmware_ops_validate_certs }}"
        datacenter_name: "{{ cluster_settings_datacenter_name }}"
        cluster_name: "{{ cluster_settings_cluster_name }}"

    - name: Test Cluster Settings
      ansible.builtin.import_role:
        name: cloud.vmware_ops.cluster_settings

    - name: Post-Deployment Validation
      block:
        - name: Retrieve Cluster Info
          vmware.vmware.cluster_info:
            hostname: "{{ vmware_ops_hostname }}"
            username: "{{ vmware_ops_username }}"
            password: "{{ vmware_ops_password }}"
            validate_certs: "{{ vmware_ops_validate_certs }}"
            datacenter: "{{ cluster_settings_datacenter_name }}"
          register: cluster_info

        - name: Check DRS Settings for Cluster
          ansible.builtin.assert:
            that:
              - "cluster_info.clusters[cluster_settings_cluster_name].drs_enabled == cluster_settings_drs_enable"
              - "cluster_info.clusters[cluster_settings_cluster_name].drs_default_vm_behavior == cluster_settings_drs_enable_vm_behavior"
              - "cluster_info.clusters[cluster_settings_cluster_name].drs_vmotion_rate == cluster_settings_drs_vmotion_rate"
            quiet: true
            fail_msg: "DRS settings are not configured correctly for {{ cluster_settings_cluster_name }}."
          when: cluster_settings_drs_enable is defined

        - name: Check HA Settings for Cluster
          ansible.builtin.assert:
            that:
              - "cluster_info.clusters[cluster_settings_cluster_name].ha_enabled == cluster_settings_ha_enable"
              - "cluster_info.clusters[cluster_settings_cluster_name].ha_host_monitoring == cluster_settings_ha_host_monitoring"
              - "cluster_info.clusters[cluster_settings_cluster_name].ha_vm_monitoring == cluster_settings_ha_vm_monitoring"
            quiet: true
            fail_msg: "HA settings are not configured correctly for {{ cluster_settings_cluster_name }}."
          when: cluster_settings_ha_enable is defined

        - name: Check vSAN Settings for Cluster
          ansible.builtin.assert:
            that:
              - "cluster_info.clusters[cluster_settings_cluster_name].vsan_enabled == cluster_settings_vsan_enable"
              - "cluster_info.clusters[cluster_settings_cluster_name].vsan_auto_claim_storage == cluster_settings_vsan_auto_claim_storage"
            quiet: true
            fail_msg: "vSAN settings are not configured correctly for {{ cluster_settings_cluster_name }}."
          when: cluster_settings_vsan_enable is defined

        - name: Notify Success
          ansible.builtin.debug:
            msg: "All cluster settings for {{ cluster_settings_cluster_name }} have been validated successfully."

  always:
    - name: "Cleanup Cluster: {{ cluster_settings_cluster_name }}"
      vmware.vmware.cluster:
        hostname: "{{ vmware_ops_hostname }}"
        username: "{{ vmware_ops_username }}"
        password: "{{ vmware_ops_password }}"
        validate_certs: "{{ vmware_ops_validate_certs }}"
        datacenter_name: "{{ cluster_settings_datacenter_name }}"
        cluster_name: "{{ cluster_settings_cluster_name }}"
        state: absent
      retries: 5
      delay: 5
      register: result
      until: result.failed == false
